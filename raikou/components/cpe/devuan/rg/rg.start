#!/bin/sh

tcpdump -envvi eth0 -U -w /var/tmp/eth0.pcap 2> /dev/null &
tcpdump -envvi eth1 -U -w /var/tmp/eth1.pcap 2> /dev/null &

ip link add name brlan0 address 12:34:56:78:9a:bc up type bridge
ip address add 192.168.1.1/24 brd + dev brlan0
ip link set dev eth1 master brlan0 up

sysctl -w net.ipv6.conf.brlan0.autoconf=1

sysctl -w net.ipv4.ip_forward=1

sysctl -w net.ipv6.conf.all.forwarding=1

iptables -t nat -s 192.168.60.0/24 -o erouter0 -A POSTROUTING -j MASQUERADE
iptables -t nat -s 192.168.1.0/24 -o erouter0 -A POSTROUTING -j MASQUERADE

dnsmasq="dhcp_only"
#dnsmasq="dhcp_dns_resolvconf"


if [ "$dnsmasq" = "dhcp_only" ]; then

#this is the dnsmasq.conf when dnsmasq is only used for dhcpv4

###########################################################
cat <<'EOT'> /var/tmp/dnsmasq.conf
bind-interfaces
domain-needed
bogus-priv
resolv-file=/etc/resolv.conf
dhcp-option-force=tag:cpewan-id,vi-encap:3561,6,"MERCV3"
dhcp-option-force=tag:cpewan-id,vi-encap:3561,5,"YAAD1256A042"
dhcp-option-force=tag:cpewan-id,vi-encap:3561,4,"38A659"
expand-hosts
dhcp-leasefile=/tmp/dnsmasq.leases
dhcp-hostsfile=/etc/dhcp_static_hosts
dhcp-optsfile=/var/dhcp_options
interface=brlan0
dhcp-range=192.168.1.10,192.168.1.254,255.255.255.0,1d
EOT
###########################################################

fi



if [ "$dnsmasq" == "dhcp_dns_resolvconf" ]; then

#this is the resolv.conf when dnsmasq is used for dns with resolvconf

###########################################################
cat <<'EOT'> /etc/resolvconf.conf
name_servers="127.0.0.1"
resolv_conf_options="trust-ad"

# Write out dnsmasq extended configuration and resolv files
dnsmasq_conf=/etc/dnsmasq-conf.conf
dnsmasq_resolv=/etc/dnsmasq-resolv.conf
EOT
###########################################################

#this is the dnsmasq.conf when dnsmasq is used for dhcp and also for dns together with resolvconf

###########################################################
cat <<'EOT'> /var/tmp/dnsmasq.conf
interface=brlan0
dhcp-range=192.168.60.100,192.168.60.199,255.255.255.0,1d
dhcp-option=option:router, 192.168.60.1
dhcp-option=option:dns-server, 8.8.8.8

log-queries
log-facility=/var/log/dnsmasq.log
log-dhcp
cache-size=0

# Read configuration generated by openresolv
conf-file=/etc/dnsmasq-conf.conf
resolv-file=/etc/dnsmasq-resolv.conf
EOT
###########################################################

fi



###########################################################
cat <<'EOT'> /var/zebra.conf
log file /var/tmp/zebra.log
table 255
# Based on prefix=3001:db9:0:f000::/64, old_previous=, LAN IPv6 address=3001:db9:0:f000:e6c0:e2ff:fe45:2460
interface brlan0

    # nd neighbor discovery

    # enable the sending of unsolicited router advertisements:
    no ipv6 nd suppress-ra

    #
    ipv6 nd prefix 3001:db9:0:f000::/64 597456 597456

#   ipv6 nd router-information 3001:db9:0:f000::/56

    ipv6 nd ra-interval 10
    ipv6 nd ra-lifetime 0

    ipv6 nd other-config-flag
    ipv6 nd router-preference medium

#   ipv6 nd rdnss 3ffe:501:ffff:100:200:ff:fe00:3f3e 300
#   ipv6 nd dnssl test.example.com 597456
#   ipv6 nd dnssl example.com 597456

interface brlan0
    ip irdp multicast

# Based on prefix=3001:db9:0:f001::/64, old_previous=, LAN IPv6 address=3001:db9:0:f001:7881:38ff:fedd:f80f
EOT
###########################################################


##################################################################################
cat <<'EOT'> /etc/dibbler/server.conf
log-level 4
inactive-mode
drop-unicast
reconfigure-enabled 1
guess-mode

iface brlan0 {
    rapid-commit yes
    preference 255
    subnet 3001:db9:0:f000::/64
    class {
        pool 3001:db9:0:f000:0:0:0:0001 - 3001:db9:0:f000:0:0:0:00f5
        T1 298728
        T2 477964
        prefered-lifetime 597456
        valid-lifetime 597456
    }
    pd-class {
        pd-pool 3001:db9:0:f020:: /56
        pd-length 64
        T1 298728
        T2 477964
        prefered-lifetime 597456
        valid-lifetime 2584656
    }
    client duid e4:c0:e2:45:24:60
    {
        address 3001:db9:0:f000::123
        prefix 3001:db9:0:f000::/64
    }
    option dns-server 3ffe:501:ffff:100:200:ff:fe00:3f3e
    option domain test.example.com,example.com
    option vendor-spec 3561-14-"38A659"
    option vendor-spec 3561-15-"YAAD1256A042"
    option vendor-spec 3561-16-"MERCV3"
}
EOT
##################################################################################


# configure vlans
ip link set dev eth0 up
ip link add link eth0 name erouter0 type vlan id $EROUTER_VLAN
ip link set dev erouter0 up

# create configure mg0/voip0 vlan interfaces
/root/vlan_setup.sh create

# let interfaces come up
sleep 1

# ipv4 client on wan - erouter0
# -----------------------------

# handle callbacks from service_udhcpc ie. ipv4 hook script for erouter0
wanmgr_ipc -d -s /etc/wanmgr_ipc_user_script.sh

# start dhcp client for erouter0 - the options are normally configured per wanmanager
udhcpc \
    -O 43 \
    -O 122 \
    -V dslforum.org \
    -x 125:00000de929010633384136353902074d455243563345030846353638354c4745040c594141443230353430313235 \
    -x 0x3D:ff1ac5946e000200000de93338413635392d4d4552435633452d594141443230353430313235 \
    -i erouter0 \
    -p /tmp/udhcpc.erouter0.pid \
    -s /usr/bin/service_udhcpc \
    -b \
    -R


# ipv4 client on wan - mg0 / voip0
/root/vlan_dhcp_service.sh dhcpv4_start



# ipv4 server on lan - brlan0
# ---------------------------

if [ "$dnsmasq" == "dhcp_dns_resolvconf" ]; then
    resolvconf -u
fi

dnsmasq -P 4096 -C /var/tmp/dnsmasq.conf


if [ "$dnsmasq" = "dhcp_only" ]; then
    dnsmasq --bind-interfaces --server=192.168.44.250@mg0 --listen-address=127.0.0.2 --no-resolv --cache-size=0
fi

if [ "$dnsmasq" = "dhcp_only" ]; then

unshare -m \
   start-stop-daemon -S -b -n dig-over-mg0 --exec /bin/bash -- -c \
   'tmpfile=$(mktemp); echo nameserver 127.0.0.2 > $tmpfile; mount $tmpfile /etc/resolv.conf -o bind; while true; do dig acs.management.example > /tmp/dig ; sleep 5; done'
fi


# ipv6 client on wan - erouter0
# -----------------------------

# handle callbacks from dibbler-client's client-notify
wanmgr_pipe /tmp/ccsp_common_fifo &

# creates the dibbler client config
/lib/rdk/dibbler-init.sh

# start dibbler client
dibbler-client start


# ipv6 client on wan - mg0
# ------------------------

mkdir /etc/dibbler-mg

##################################################################################
cat <<'EOT'> /etc/dibbler-mg/client.conf

log-level 8
log-mode full

script "/etc/dibbler-mg/client-notify.sh"

iface mg0 {
# ask for address
    ia

# ask for options
    option dns-server
    option ntp-server
}
EOT
##################################################################################


##################################################################################
cat <<'EOT'> /etc/dibbler-mg/client-notify.sh
#!/bin/sh

env > /etc/dibbler-mg/envdump

for i in $SRV_OPTION23; do
    ip -6 route add $i dev mg0
done


EOT
##################################################################################
chmod +x /etc/dibbler-mg/client-notify.sh

dibbler-client start -w /etc/dibbler-mg


# ipv6 server on lan
# ------------------

# router advertisements with zebra
zebra -d -f /var/zebra.conf -A 127.0.0.1 -i /var/tmp/zebra.pid

#start dibbler-server
#the dibbler-server config is prepopulated, this would normally be created per ipv6_service.sh / ipv6_service
dibbler-server start
